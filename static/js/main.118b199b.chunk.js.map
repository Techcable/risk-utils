{"version":3,"sources":["simulate.js","Simulator.js","App.js","github_corner.js","serviceWorker.js","index.js"],"names":["zip","a","b","args","slice","call","arguments","shortest","length","reduce","map","_","i","array","median","data","Error","sort","mid","Math","floor","AnalysisResult","survivingAttackTroops","survivingDefenceTroops","this","runs","Territory","name","troops","times","rolls","value","random","push","defender","console","log","defenseDice","roll","attackDice","max","min","VALID_MODES","AttackForm","props","state","mode","attackingTroops","defendingTroops","event","preventDefault","handleClick","Number","parseInt","includes","isInteger","alert","onSubmit","target","setState","Form","Group","Control","as","onChange","e","updateMode","Label","type","updateAttackingTroops","updateDefendingTroops","Button","variant","onClick","React","Component","AnalyseOutcome","survivingAttackMsg","survivingDefenceMsg","result","percentage","AttackSimulator","formResult","attacker","attack","analyseResult","run","assert","analyse","Container","Row","Col","lg","renderOutcome","RiskNavBar","Navbar","bg","expand","Brand","href","Collapse","id","Nav","className","Item","Link","active","dangerouslySetInnerHTML","__html","RiskHeader","class","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.118b199b.chunk.js","sourcesContent":["function zip(a, b) {\n    var args = [].slice.call(arguments);\n    var shortest = args.length==0 ? [] : args.reduce(function(a,b){\n        return a.length<b.length ? a : b\n    });\n\n    return shortest.map(function(_,i){\n        return args.map(function(array){return array[i]})\n    });\n}\nfunction median(data) {\n    if (data.length == 0) throw new Error(\"Empty data!\");\n    var data = data.slice();\n    data.sort(function(a, b){return a - b});\n    var mid = Math.floor(data.length / 2);\n    if (data.length % 2 != 0) {\n        return data[mid];\n    } else {\n        var first = data[mid];\n        var second = data[mid - 1];\n        return (first + second) / 2;\n    }\n}\nclass AnalysisResult {\n    constructor(survivingAttackTroops, survivingDefenceTroops) {\n        this.survivingAttackTroops = survivingAttackTroops;\n        this.survivingDefenceTroops = survivingDefenceTroops;\n    }\n\n    get runs() {\n        return this.survivingAttackTroops.length\n            + this.survivingDefenceTroops.length;\n    }\n\n    get percentage() {\n        return (this.survivingAttackTroops.length / this.runs) * 100;\n    }\n}\nfunction analyse(attackingTroops, defendingTroops) {\n    const RUNS = 1000;\n    let attacker = new Territory(\"Attacker\", null);\n    let defender = new Territory(\"Defender\", null);\n    let survivingAttackTroops = [];\n    let survivingDefenceTroops = [];\n    for (var run = 0; run < RUNS; run++) {\n        attacker.troops = attackingTroops;\n        defender.troops = defendingTroops;\n        if (attacker.attack(defender)) {\n            survivingAttackTroops.push(attacker.troops);\n        } else {\n            survivingDefenceTroops.push(defender.troops);\n        }\n    }\n    console.assert(survivingAttackTroops.length + survivingDefenceTroops.length == RUNS);\n    return new AnalysisResult(survivingAttackTroops, survivingDefenceTroops);\n}\nvar sumRoll = 0;\nvar numRoll = 0;\nclass Territory {\n    constructor(name, troops) {\n        this.name = name;\n        this.troops = troops;\n    }\n    get attackDice() {\n        return Math.max(Math.min(3, this.troops - 1), 1);\n    }\n    get defenseDice() {\n        return Math.min(this.troops, 2);\n    }\n    roll(times) {\n        var rolls = [];\n        for (var i = 0; i < times; i++) {\n            const value = Math.floor(Math.random() * 6) + 1;\n            sumRoll += value;\n            numRoll += 1;\n            rolls.push(value);\n        }\n        // NOTE: Sorts in reverse order\n        rolls.sort(function(a, b){return b-a});\n        return rolls;\n    }\n    attack(defender) {\n        console.log(`${this.troops} troops attacking ${defender.troops}`);\n        const troopThreshold = 1;\n        while (this.troops > troopThreshold) {\n            const defenseDice = defender.roll(defender.defenseDice);\n            if (defenseDice.length == 0) {\n                if (defender.troops != 0) throw new Error(defender.troops);\n                return true; // we win\n            }\n            const attackDice = this.roll(this.attackDice);\n            for (let [attackDie, defenseDie] of zip(attackDice, defenseDice)) {\n                if (attackDie > defenseDie) {\n                    defender.troops -= 1;\n                } else {\n                    this.troops -= 1;\n                }\n            }\n            if (this.troops < 0) throw new Error();\n            if (defender.troops < 0) throw new Error();\n        }\n        return false; // we loose or give up\n    }\n}\n\nexport {Territory, analyse, median};","import React from 'react';\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button';\n\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport {Territory, analyse, median} from './simulate.js';\n\nconst VALID_MODES = [\"Attack\", \"Analyse\"];\n\nclass AttackForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmode: \"Attack\",\n\t\t\tattackingTroops: null,\n\t\t\tdefendingTroops: null\n\t\t};\n\t}\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tthis.handleClick();\n\t}\n\n\thandleClick() {\n\t\tconst mode = this.state.mode;\n\t\tconst attackingTroops = Number.parseInt(this.state.attackingTroops);\n\t\tconst defendingTroops = Number.parseInt(this.state.defendingTroops);\n\t\tif (!VALID_MODES.includes(mode)) {\n\t\t\talert(\"Invalid mode: \" + mode);\n\t\t\treturn;\n\t\t}\n\t\tif (!Number.isInteger(attackingTroops)) {\n\t\t\talert(\"Invalid attacking integer: \" + this.state.attackingTroops);\n\t\t\treturn;\n\t\t}\n\t\tif (!Number.isInteger(defendingTroops)) {\n\t\t\talert(\"Invalid defending troops: \" + this.state.defendingTroops);\n\t\t}\n\t\tthis.props.onSubmit({\n\t\t\tmode: mode, attackingTroops: attackingTroops,\n\t\t\tdefendingTroops: defendingTroops\n\t\t});\n\t}\n\n\tupdateMode(event) {\n\t\tconst mode = event.target.value;\n\t\tif (!VALID_MODES.includes(mode)) throw new Error(\"Invalid mode: \" + mode);\n\t\tthis.setState({mode: mode});\n\t}\n\tupdateAttackingTroops(event) {\n\t\tthis.setState({attackingTroops: event.target.value});\n\t}\n\tupdateDefendingTroops(event) {\n\t\tthis.setState({defendingTroops: event.target.value});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Form>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t  value={this.state.mode}\n\t\t\t\t\t  as=\"select\"\n\t\t\t\t\t  onChange={(e) => this.updateMode(e)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option>Attack</option>\n\t\t\t\t\t\t<option>Analyse</option>\n\t\t\t\t\t</Form.Control>\n\t\t\t\t\t<Form.Label>Attacking Troops</Form.Label>\n\t\t\t\t\t<Form.Control type=\"number\" min=\"2\" \n\t\t\t\t\t\tonChange={(e) => this.updateAttackingTroops(e)} />\n\t\t\t\t\t<Form.Label>Defending Troops</Form.Label>\n\t\t\t\t\t<Form.Control type=\"number\" min=\"1\"\n\t\t\t\t\t\tonChange={(e) => this.updateDefendingTroops(e)} />\t\t\n\t\t\t\t</Form.Group>\n\t\t\t\t<Button variant=\"primary\" onClick={(e) => this.handleClick(e)}>Run</Button>\n\t\t\t</Form>\n\t\t);\n\t}\n}\n\nfunction AttackOutcome(props) {\n\tif (props.attackSuccess) {\n\t\treturn <p>Attacker wins with ${props.attacker.troops} troops remaining</p>;\n\t} else {\n\t\treturn <p>Defender wins with ${props.defender.troops} troops remaining</p>;\n\t}\n}\n\nfunction AnalyseOutcome(props) {\n\tconst result = props.result;\n\tlet survivingAttackMsg;\n\tlet survivingDefenceMsg;\n\tif (result.survivingAttackTroops.length > 0) {\n\t\tsurvivingAttackMsg = <p>Median troops surviving a successful attack: {median(result.survivingAttackTroops)}</p>;\n\t} else {\n\t\tsurvivingAttackMsg = <p>Attacker never wins</p>;\n\t}\n\tif (result.survivingDefenceTroops.length > 0) {\n\t\tsurvivingDefenceMsg = <p>Median troops surviving a successful defence: {median(result.survivingDefenceTroops)}</p>;\n\t} else {\n\t\tsurvivingDefenceMsg = <p>Defender never wins</p>;\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<p>Attacker wins {result.percentage}% of the time</p>\n\t\t\t{survivingAttackMsg}\n\t\t\t{survivingDefenceMsg}\n\t\t</div>\n\t);\n}\n\nclass AttackSimulator extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tformResult: null\n\t\t};\n\t}\n\n\trenderOutcome(formResult) {\n\t\tif (formResult == null) return null;\n\t\tconst mode = formResult.mode;\n\t\tconst attackingTroops = formResult.attackingTroops;\n\t\tconst defendingTroops = formResult.defendingTroops;\n\t\tswitch (mode) {\n\t\t\tcase null:\n\t\t\t\treturn null;\n\t\t\tcase \"Attack\":\n\t\t\t\tconst attacker = new Territory(\"Attacker\", attackingTroops);\n                const defender = new Territory(\"Defender\", defendingTroops);\n                if (attacker.attack(defender)) {\n                \treturn <p>Attacker wins with {attacker.troops} troops remaining</p>;\n                } else {\n                \treturn <p>Defender wins with {defender.troops} remaining</p>;\n                }\n            case \"Analyse\":\n            \tlet analyseResult = analyse(attackingTroops, defendingTroops);\n            \treturn <AnalyseOutcome result={analyseResult} />;\n            default:\n            \tthrow new Error(mode);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col lg={true}>\n\t\t\t\t\t\t<AttackForm onSubmit={(formResult) => this.setState({formResult: formResult})} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col lg={true}>\n\t\t\t\t\t\t<h4>Outcome</h4>\n\t\t\t\t\t\t{this.renderOutcome(this.state.formResult)}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default AttackSimulator;","import React from 'react';\nimport GITHUB_CORNER_HTML from './github_corner.js'\n\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport Container from 'react-bootstrap/Container';\n\nimport AttackSimulator from './Simulator.js';\n\nfunction RiskNavBar() {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"\">Risk Utilities</Navbar.Brand>\n      <Navbar.Collapse id=\"navbarSupportedContent\">\n        <Nav className=\"mr-auto\">\n          <Nav.Item>\n            <Nav.Link active={true}>Home</Nav.Link> \n          </Nav.Item>\n        </Nav>\n      </Navbar.Collapse>\n      {/* Our github logo */}\n      <div dangerouslySetInnerHTML={{__html: GITHUB_CORNER_HTML}} />\n    </Navbar>\n  );\n}\n\nfunction RiskHeader() {\n  return (\n    <Container>\n    <div>\n        <h1>Risk Utilities</h1>\n        <p class=\"lead\">Simulate attacks and analyse outputs</p>\n    </div>\n    </Container>\n  );\n}\n\nfunction App() {\n  return (\n    <div>\n      <RiskNavBar />\n\n      <RiskHeader />\n\n      <AttackSimulator />\n    </div>\n  );\n}\n\nexport default App;","const GITHUB_CORNER_WEBSITE = \"https://github.com/Techcable/risk-utils\";\n\nconst GITHUB_CORNER_HTML = '<a href=' + GITHUB_CORNER_WEBSITE + ' class=\"github-corner\" aria-label=\"View source on Github\"><svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" style=\"fill:#70B7FD; color:#fff; position: absolute; top: 0; border: 0; right: 0;\" aria-hidden=\"true\"><path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path><path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style=\"transform-origin: 130px 106px;\" class=\"octo-arm\"></path><path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path></svg></a><style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}</style>';\n\nexport default GITHUB_CORNER_HTML;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}