(()=>{"use strict";function t(t){postMessage(t)}class o{get attackDice(){return Math.max(Math.min(3,this.troops-1),1)}get defenseDice(){return Math.min(this.troops,2)}roll(t){let o=[];for(let e=0;e<t;e++){let t=Math.floor(6*Math.random())+1;o.push(t)}return o.sort(function(t,o){return o-t}),o}attack(t){for(console.log("".concat(this.troops," troops attacking ").concat(t.troops));this.troops>1;){let o=t.roll(t.defenseDice);if(0==o.length){if(0!=t.troops)throw Error("Defender has zero dice but nonzero troops: ".concat(t.troops));return!0}for(let[e,r]of function(t,o){let e=[t,o];return(t.length<o.length?t:o).map(function(t,o){return e.map(function(t){return t[o]})})}(this.roll(this.attackDice),o))e>r?t.troops-=1:this.troops-=1;if(this.troops<0||t.troops<0)throw Error()}return!1}constructor(t,o){this.name=t,this.troops=o}}onmessage=function(e){let r=e.data.mode,n=e.data.attackingTroops,s=e.data.defendingTroops;switch(r){case"Attack":console.log("Simulating attack");let a=new o("Attacker",n),c=new o("Defender",s),i=a.attack(c);console.log("Attacker troops ".concat(a.troops)),t({attacker:a,defender:c,win:i});return;case"Analyse":let l=0;t(function(t,e,r){let n=new o("Attacker",t),s=new o("Defender",e),a=[],c=[];for(let o=0;o<2e4;o++)n.troops=t,s.troops=e,n.attack(s)?a.push(n.troops):c.push(s.troops),r(o/2e4);return console.assert(a.length+c.length==2e4),{survivingAttackTroops:a,survivingDefenceTroops:c}}(n,s,o=>{l++%100==0&&t({status:o})}));break;default:throw Error("Invalid mode ".concat(r))}}})(),_N_E={};